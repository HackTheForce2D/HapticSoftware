#############################################################################
# Makefile for building: Haptics
# Generated by qmake (2.01a) (Qt 4.8.6) on: Fri May 20 22:48:59 2016
# Project:  Haptics.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -config release -o Makefile Haptics.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtNetwork -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu CONFIG += c++11 -lBox2D -lsfml-graphics -lsfml-window -lsfml-system -lQtGui -lQtNetwork -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		mainwindow.cpp \
		physics.cpp \
		visual.cpp \
		hapticinterface.cpp \
		qsfmlcanvas.cpp \
		body.cpp \
		effector.cpp \
		connectiondialog.cpp \
		createobject.cpp \
		pantograph.cpp moc_mainwindow.cpp \
		moc_physics.cpp \
		moc_visual.cpp \
		moc_hapticinterface.cpp \
		moc_connectiondialog.cpp \
		moc_createobject.cpp \
		moc_pantograph.cpp
OBJECTS       = main.o \
		mainwindow.o \
		physics.o \
		visual.o \
		hapticinterface.o \
		qsfmlcanvas.o \
		body.o \
		effector.o \
		connectiondialog.o \
		createobject.o \
		pantograph.o \
		moc_mainwindow.o \
		moc_physics.o \
		moc_visual.o \
		moc_hapticinterface.o \
		moc_connectiondialog.o \
		moc_createobject.o \
		moc_pantograph.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		Haptics.pro
QMAKE_TARGET  = Haptics
DESTDIR       = 
TARGET        = Haptics

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET): ui_mainwindow.h ui_connectiondialog.h ui_createobject.h $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: Haptics.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtNetwork.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -config release -o Makefile Haptics.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtNetwork.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -config release -o Makefile Haptics.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/Haptics1.0.0 || $(MKDIR) .tmp/Haptics1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/Haptics1.0.0/ && $(COPY_FILE) --parents mainwindow.h physics.h visual.h hapticinterface.h qsfmlcanvas.h body.h effector.h connectiondialog.h createobject.h pantograph.h .tmp/Haptics1.0.0/ && $(COPY_FILE) --parents main.cpp mainwindow.cpp physics.cpp visual.cpp hapticinterface.cpp qsfmlcanvas.cpp body.cpp effector.cpp connectiondialog.cpp createobject.cpp pantograph.cpp .tmp/Haptics1.0.0/ && $(COPY_FILE) --parents mainwindow.ui connectiondialog.ui createobject.ui .tmp/Haptics1.0.0/ && (cd `dirname .tmp/Haptics1.0.0` && $(TAR) Haptics1.0.0.tar Haptics1.0.0 && $(COMPRESS) Haptics1.0.0.tar) && $(MOVE) `dirname .tmp/Haptics1.0.0`/Haptics1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/Haptics1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_mainwindow.cpp moc_physics.cpp moc_visual.cpp moc_hapticinterface.cpp moc_connectiondialog.cpp moc_createobject.cpp moc_pantograph.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_mainwindow.cpp moc_physics.cpp moc_visual.cpp moc_hapticinterface.cpp moc_connectiondialog.cpp moc_createobject.cpp moc_pantograph.cpp
moc_mainwindow.cpp: connectiondialog.h \
		createobject.h \
		body.h \
		include/SFML/Graphics.hpp \
		mainwindow.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) mainwindow.h -o moc_mainwindow.cpp

moc_physics.cpp: body.h \
		include/SFML/Graphics.hpp \
		effector.h \
		hapticinterface.h \
		pantograph.h \
		physics.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) physics.h -o moc_physics.cpp

moc_visual.cpp: qsfmlcanvas.h \
		physics.h \
		body.h \
		include/SFML/Graphics.hpp \
		effector.h \
		hapticinterface.h \
		pantograph.h \
		visual.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) visual.h -o moc_visual.cpp

moc_hapticinterface.cpp: pantograph.h \
		effector.h \
		body.h \
		include/SFML/Graphics.hpp \
		hapticinterface.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) hapticinterface.h -o moc_hapticinterface.cpp

moc_connectiondialog.cpp: connectiondialog.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) connectiondialog.h -o moc_connectiondialog.cpp

moc_createobject.cpp: createobject.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) createobject.h -o moc_createobject.cpp

moc_pantograph.cpp: effector.h \
		body.h \
		include/SFML/Graphics.hpp \
		pantograph.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) pantograph.h -o moc_pantograph.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_mainwindow.h ui_connectiondialog.h ui_createobject.h
compiler_uic_clean:
	-$(DEL_FILE) ui_mainwindow.h ui_connectiondialog.h ui_createobject.h
ui_mainwindow.h: mainwindow.ui \
		visual.h \
		qsfmlcanvas.h \
		physics.h \
		body.h \
		include/SFML/Graphics.hpp \
		effector.h \
		hapticinterface.h \
		pantograph.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic mainwindow.ui -o ui_mainwindow.h

ui_connectiondialog.h: connectiondialog.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic connectiondialog.ui -o ui_connectiondialog.h

ui_createobject.h: createobject.ui
	/usr/lib/x86_64-linux-gnu/qt4/bin/uic createobject.ui -o ui_createobject.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp mainwindow.h \
		connectiondialog.h \
		createobject.h \
		body.h \
		include/SFML/Graphics.hpp \
		physics.h \
		effector.h \
		hapticinterface.h \
		pantograph.h \
		visual.h \
		qsfmlcanvas.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

mainwindow.o: mainwindow.cpp mainwindow.h \
		connectiondialog.h \
		createobject.h \
		body.h \
		include/SFML/Graphics.hpp \
		ui_mainwindow.h \
		visual.h \
		qsfmlcanvas.h \
		physics.h \
		effector.h \
		hapticinterface.h \
		pantograph.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o mainwindow.o mainwindow.cpp

physics.o: physics.cpp physics.h \
		body.h \
		include/SFML/Graphics.hpp \
		effector.h \
		hapticinterface.h \
		pantograph.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o physics.o physics.cpp

visual.o: visual.cpp visual.h \
		qsfmlcanvas.h \
		physics.h \
		body.h \
		include/SFML/Graphics.hpp \
		effector.h \
		hapticinterface.h \
		pantograph.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o visual.o visual.cpp

hapticinterface.o: hapticinterface.cpp hapticinterface.h \
		pantograph.h \
		effector.h \
		body.h \
		include/SFML/Graphics.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o hapticinterface.o hapticinterface.cpp

qsfmlcanvas.o: qsfmlcanvas.cpp qsfmlcanvas.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qsfmlcanvas.o qsfmlcanvas.cpp

body.o: body.cpp body.h \
		include/SFML/Graphics.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o body.o body.cpp

effector.o: effector.cpp effector.h \
		body.h \
		include/SFML/Graphics.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o effector.o effector.cpp

connectiondialog.o: connectiondialog.cpp connectiondialog.h \
		ui_connectiondialog.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o connectiondialog.o connectiondialog.cpp

createobject.o: createobject.cpp createobject.h \
		ui_createobject.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o createobject.o createobject.cpp

pantograph.o: pantograph.cpp pantograph.h \
		effector.h \
		body.h \
		include/SFML/Graphics.hpp
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o pantograph.o pantograph.cpp

moc_mainwindow.o: moc_mainwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_mainwindow.o moc_mainwindow.cpp

moc_physics.o: moc_physics.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_physics.o moc_physics.cpp

moc_visual.o: moc_visual.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_visual.o moc_visual.cpp

moc_hapticinterface.o: moc_hapticinterface.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_hapticinterface.o moc_hapticinterface.cpp

moc_connectiondialog.o: moc_connectiondialog.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_connectiondialog.o moc_connectiondialog.cpp

moc_createobject.o: moc_createobject.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_createobject.o moc_createobject.cpp

moc_pantograph.o: moc_pantograph.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_pantograph.o moc_pantograph.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

